/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { WeatherOracle, WeatherOracleInterface } from "../WeatherOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "temperature",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "precipitationProbability",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "WeatherUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "currentWeather",
    outputs: [
      {
        internalType: "int256",
        name: "temperature",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "precipitationProbability",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lastUpdated",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_temperature",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "_precipitationProbability",
        type: "uint8",
      },
    ],
    name: "updateWeather",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161061e38038061061e833981810160405281019061003291906100dc565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610109565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a98261007e565b9050919050565b6100b98161009e565b81146100c457600080fd5b50565b6000815190506100d6816100b0565b92915050565b6000602082840312156100f2576100f1610079565b5b6000610100848285016100c7565b91505092915050565b610506806101186000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633002dc61146100515780637adbf9731461006d5780637dc0d1d014610089578063955fe0a0146100a7575b600080fd5b61006b600480360381019061006691906102f0565b6100c7565b005b6100876004803603810190610082919061038e565b61015d565b005b610091610231565b60405161009e91906103ca565b60405180910390f35b6100af610257565b6040516100be9392919061041c565b60405180910390f35b60405180606001604052808381526020018260ff16815260200142815250600080820151816000015560208201518160010160006101000a81548160ff021916908360ff160217905550604082015181600201559050507f37d6f8ca6a32e14c7f260d6fa98432f889e4da997fa0205afb39ef0510e331468282426040516101519392919061041c565b60405180910390a15050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e4906104b0565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060000154908060010160009054906101000a900460ff16908060020154905083565b600080fd5b6000819050919050565b61029481610281565b811461029f57600080fd5b50565b6000813590506102b18161028b565b92915050565b600060ff82169050919050565b6102cd816102b7565b81146102d857600080fd5b50565b6000813590506102ea816102c4565b92915050565b600080604083850312156103075761030661027c565b5b6000610315858286016102a2565b9250506020610326858286016102db565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035b82610330565b9050919050565b61036b81610350565b811461037657600080fd5b50565b60008135905061038881610362565b92915050565b6000602082840312156103a4576103a361027c565b5b60006103b284828501610379565b91505092915050565b6103c481610350565b82525050565b60006020820190506103df60008301846103bb565b92915050565b6103ee81610281565b82525050565b6103fd816102b7565b82525050565b6000819050919050565b61041681610403565b82525050565b600060608201905061043160008301866103e5565b61043e60208301856103f4565b61044b604083018461040d565b949350505050565b600082825260208201905092915050565b7f4f6e6c79206f7261636c652063616e2075706461746520776561746865720000600082015250565b600061049a601e83610453565b91506104a582610464565b602082019050919050565b600060208201905081810360008301526104c98161048d565b905091905056fea2646970667358221220b8f44edb0f04f4f586a07df5e5d744b0f8147f67f19a7c33eb210a8acfc5e19364736f6c63430008180033";

type WeatherOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WeatherOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WeatherOracle__factory extends ContractFactory {
  constructor(...args: WeatherOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_oracle, overrides || {});
  }
  override deploy(
    _oracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_oracle, overrides || {}) as Promise<
      WeatherOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WeatherOracle__factory {
    return super.connect(runner) as WeatherOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeatherOracleInterface {
    return new Interface(_abi) as WeatherOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WeatherOracle {
    return new Contract(address, _abi, runner) as unknown as WeatherOracle;
  }
}
